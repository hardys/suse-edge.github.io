"use strict";(self.webpackChunksuse_edge_docs=self.webpackChunksuse_edge_docs||[]).push([[977],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),p=s,f=d["".concat(l,".").concat(p)]||d[p]||m[p]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:s,o[1]=i;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5551:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(7462),s=(n(7294),n(3905));const a={sidebar_position:4,title:"Running sushy-emulator as a container on SLES/openSUSE"},o="Requisites",i={unversionedId:"misc/sushy-emulator-sles-certificates-container",id:"misc/sushy-emulator-sles-certificates-container",title:"Running sushy-emulator as a container on SLES/openSUSE",description:"* SLES or openSUSE host",source:"@site/docs/misc/sushy-emulator-sles-certificates-container.md",sourceDirName:"misc",slug:"/misc/sushy-emulator-sles-certificates-container",permalink:"/docs/misc/sushy-emulator-sles-certificates-container",draft:!1,editUrl:"https://github.com/suse-edge/suse-edge.github.io/tree/main/docs/misc/sushy-emulator-sles-certificates-container.md",tags:[],version:"current",lastUpdatedBy:"Eduardo M\xednguez",lastUpdatedAt:1688056837,formattedLastUpdatedAt:"Jun 29, 2023",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Running sushy-emulator as a container on SLES/openSUSE"},sidebar:"docs",previous:{title:"Modify SLE Micro ISO (or any SLE ISO)",permalink:"/docs/misc/modify-sle-micro-iso"},next:{title:"Create a package (RPM or Container image) using OBS (openSUSE Build Service)",permalink:"/docs/dev_howto/create-package-obs"}},l={},c=[{value:"Testing",id:"testing",level:2}],u={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,s.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"requisites"},"Requisites"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"SLES or openSUSE host"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"qemu-ovmf-x86_64")," if you want secure boot (It can be installed with ",(0,s.kt)("a",{parentName:"li",href:"https://software.opensuse.org/package/qemu-ovmf-x86_64"},(0,s.kt)("inlineCode",{parentName:"a"},"zypper")),")")),(0,s.kt)("h1",{id:"preparation"},"Preparation"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Create the ",(0,s.kt)("inlineCode",{parentName:"li"},"/etc/sushy/")," folder to store the configuration and certificates")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"mkdir -p /etc/sushy/\ncd /etc/sushy/\n")),(0,s.kt)("p",null,"Ansible Redfish module ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/ansible-collections/community.general/blob/main/plugins/modules/redfish_command.py#L851C5-L851C13"},"requires https"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"# Build root URI\nroot_uri = \"https://\" + module.params['baseuri']\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Create the certificate and key (hint: this is not the best way to create them as it is passwordless and 10 years of expiration)")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'openssl req -new -newkey rsa:4096 -days 3650 -nodes -x509 \\\n    -subj "/C=ES/ST=Madrid/L=Las Rozas/O=Foo/CN=sushy-emulator" \\\n    -keyout sushy-emulator.key -out sushy-emulator.crt\n')),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Create the config file for the sushy-emulator as:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"cat << EOF > /etc/sushy/sushy-emulator.conf\nSUSHY_EMULATOR_LISTEN_IP = u'0.0.0.0'\nSUSHY_EMULATOR_LISTEN_PORT = 8443\nSUSHY_EMULATOR_SSL_CERT = u'/etc/sushy/sushy-emulator.crt'\nSUSHY_EMULATOR_SSL_KEY = u'/etc/sushy/sushy-emulator.key'\nSUSHY_EMULATOR_OS_CLOUD = None\nSUSHY_EMULATOR_LIBVIRT_URI = u'qemu:///system'\nSUSHY_EMULATOR_IGNORE_BOOT_DEVICE = True\nSUSHY_EMULATOR_BOOT_LOADER_MAP = {\n    u'UEFI': {\n        u'x86_64': u'/usr/share/qemu/ovmf-x86_64-ms-code.bin'\n    },\n    u'Legacy': {\n        u'x86_64': None\n    }\n}\nEOF\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Create the systemd unit file for the container to be executed properly (including the paths, files, etc.):")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'cat << \'EOF\' > /etc/systemd/system/container-sushy-emulator.service\n[Unit]\nDescription=Podman container-sushy-emulator.service\n\n[Service]\nRestart=on-failure\nExecStartPre=/usr/bin/rm -f /%t/%n-pid /%t/%n-cid\nExecStart=/usr/bin/podman run --conmon-pidfile /%t/%n-pid --cidfile /%t/%n-cid \\\n  --name="sushy-emulator" \\\n  --privileged -d --replace \\\n  -v /etc/sushy:/etc/sushy:ro \\\n  -v /var/run/libvirt:/var/run/libvirt \\\n  -v /usr/share/qemu/ovmf-x86_64-ms-code.bin:/usr/share/qemu/ovmf-x86_64-ms-code.bin \\\n  -v /etc/localtime:/etc/localtime:ro \\\n  -e SUSHY_EMULATOR_CONFIG=/etc/sushy/sushy-emulator.conf \\\n  -p 8443:8443 \\\n  quay.io/metal3-io/sushy-tools:latest sushy-emulator\n\nExecStop=/usr/bin/podman stop -t 10 sushy-emulator\nExecStopPost=/usr/bin/sh -c "/usr/bin/podman rm -f `cat /%t/%n-cid`"\nKillMode=none\nType=forking\nPIDFile=/%t/%n-pid\n\n[Install]\nWantedBy=default.target\nEOF\n')),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Notify systemd for the new unit file, enable the service at boot and start it:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"systemctl daemon-reload\nsystemctl enable --now container-sushy-emulator\n")),(0,s.kt)("h2",{id:"testing"},"Testing"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"curl https://localhost:8443/redfish/v1/Systems\ncurl: (60) SSL certificate problem: self signed certificate\nMore details here: https://curl.se/docs/sslcerts.html\n\ncurl failed to verify the legitimacy of the server and therefore could not\nestablish a secure connection to it. To learn more about this situation and\nhow to fix it, please visit the web page mentioned above.\n")),(0,s.kt)("p",null,"Ignoring the certificate:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'curl https://localhost:8443/redfish/v1/Systems -k\n{\n    "@odata.type": "#ComputerSystemCollection.ComputerSystemCollection",\n    "Name": "Computer System Collection",\n    "Members@odata.count": 6,\n    "Members": [\n\n            {\n                "@odata.id": "/redfish/v1/Systems/1a3cc749-dd03-4f2b-a588-981c8fbf2911"\n            },\n\n            {\n                "@odata.id": "/redfish/v1/Systems/7201e8ab-28e3-4847-a68b-f008d8af21df"\n            },\n\n            {\n                "@odata.id": "/redfish/v1/Systems/eaa7c6b1-5195-4677-8473-e96114c88d02"\n            },\n\n            {\n                "@odata.id": "/redfish/v1/Systems/5940f178-aa88-4b12-8640-b3e87723d0dd"\n            },\n\n            {\n                "@odata.id": "/redfish/v1/Systems/57e13c2f-aabb-488d-a895-db8150d0bf34"\n            },\n\n            {\n                "@odata.id": "/redfish/v1/Systems/a2436047-7663-46d7-bd83-ea7b359cf237"\n            }\n\n    ],\n    "@odata.context": "/redfish/v1/$metadata#ComputerSystemCollection.ComputerSystemCollection",\n    "@odata.id": "/redfish/v1/Systems",\n    "@Redfish.Copyright": "Copyright 2014-2016 Distributed Management Task Force, Inc. (DMTF). For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright."\n}\n')))}m.isMDXComponent=!0}}]);